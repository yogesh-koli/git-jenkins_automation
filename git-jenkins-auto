pipeline {
    agent any
    parameters {
        string(name: 'TAG_NAME', defaultValue: '', description: 'Enter the tag name')
        string(name: 'BRANCH_NAME', defaultValue: 'master', description: 'Enter the branch name')
    }

    environment {
        GIT_HOME ="/home/beast9949/git"
        GIT_URL ="https://beast9949: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@github.com/beast9949/git_automation.git"
    }

    stages {
        stage('Pull and push from GitHub') {
            steps {
                script {
                    sh '''
                        whoami
                        cd /yogi/git_automation
                        ls -lsrt
                        # git config --global --add safe.directory /yogi/git_automation
                        git branch
                        git stash
                    '''

                    if (BRANCH_NAME != "master" && BRANCH_NAME != "") {
                        sh 'git pull'
                    } else {
                        sh "git pull origin $BRANCH_NAME"
                    }
                }
            }
        }

        stage('Git checkout') {
            steps {
                script {
                    sh '''
                        cd /yogi/git_automation
                        if [ "$BRANCH_NAME" != "master" ]; then
                            git checkout $BRANCH_NAME
                        fi
                    '''
                }
            }
        }

        stage('Pull and push from GitHub (master Branch)') {
            steps {
                sh '''
                    cd /yogi/git_automation
                    git pull origin master
                '''
            }
        }

        stage('Create and push a tag') {
            steps {
                script {
                    def tagName = params.TAG_NAME.trim()

                    if (TAG_NAME) {
                        sh '''
                           cd /yogi/git_automation
                           echo $TAG_NAME
                           git tag -a $TAG_NAME -m "Version $TAG_NAME"
                            git pull $GIT_URL
                           git push $GIT_URL --tags
                         '''
                    } else {
                        error('Tag name not provided. Tagging aborted.')
                    }
                }
            }
        }

        stage('Pull a tag') {
            steps {
                sh '''
                    cd /yogi/git_automation
                    git fetch --tags
                    git checkout ${params.TAG_NAME}
                '''
            }
        }
    }
}



